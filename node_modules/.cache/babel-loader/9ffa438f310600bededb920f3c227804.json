{"ast":null,"code":"import _classCallCheck from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lboylan/Documents/Homework/HW3/graph-bar/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Bar from './Components/Bar/Bar.js';\nimport Graph from './Components/Graph/Graph.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      baseCode: \"USD\",\n      rateData: [{\n        countryCode: \"\",\n        rate: \"\",\n        height: \"50%\",\n        monetarySymbol: \"$\"\n      }] // Add data during initial page load. Kind of likke constructor\n\n    };\n\n    _this.componentDidMount = function () {\n      console.log(\"In did Mount and State:\", _this.state);\n\n      _this.getData();\n    };\n\n    _this.onBaseCodeChange = function (ev) {\n      _this.setState({\n        baseCode: ev.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"In render. height =\", this.state.height);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" Currency\"), React.createElement(\"h2\", {\n        className: \"BaseValue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Base Currency:\"), React.createElement(\"select\", {\n        basecode: this.baseCode,\n        className: \"BaseCode\",\n        onChange: this.onBaseCodeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"USA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"USA\"), React.createElement(\"option\", {\n        value: \"AUD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"AUD\"), React.createElement(\"option\", {\n        value: \"SGD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"SGD\"), React.createElement(\"option\", {\n        value: \"EUR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"EUR\")), React.createElement(Graph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        style: {\n          height: this.state.height\n        },\n        title: this.state.countryCode,\n        symbol: this.state.monetarySymbol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      console.log(\"In GetData\"); // The data format from the remote site will be\n      // \"date\": \"YYYY-MM-DD\",\n      // \"rates\": {\"CCC\":dec,\"CCC\":dec,}, \n      // \"base\":  \"3-letter string\"\n\n      /* Use to test\n      const data =\n      {\n          \"date\" : \"2018-01-01\",\n          \"rates\":{\"USD\":1.0,\"GBP\":10.0},\n          \"base\":\"USD \"        \n      };\n      */\n\n      var newData = {};\n      fetch(\"https://api.exchangeratesapi.io/latest?base=USD&symbols=BGN,GBP,AUD,EUR\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(\"Got Data\");\n        console.log(\"Data=\", data);\n        console.log(\"Rates=\", data.rates);\n\n        var _arr = Object.keys(data.rates);\n\n        for (var _i = 0; _i < _arr.length; _i++) {\n          var key = _arr[_i];\n          var value = data.rates[key];\n          console.log(\"in loop to get rates. Value=\", value);\n          console.log(\"in loop to get rates. KEY=\", key); //Check for properties from prototype chain   \n\n          if (data.rates.hasOwnProperty(key)) {\n            //not a property from prototype chain\n            // format value to be x.xx\n            var formatValue = parseFloat(value).toFixed(2) * 30; // format the HTML style attribute\n            //const height = formatValue + '%';\n            // Modify State\n\n            newData.countryCode = key;\n            newData.rate = formatValue;\n            newData.height = formatValue + '%';\n            newData.monetarySymbol = \"$\";\n            console.log(\"NewData[\", key, \"]=\", newData);\n\n            _this2.stateState({\n              rateData: newData\n            });\n          }\n        }\n      });\n      /*       \n             /* Not working\n              // 404\n              if (!data.main) {\n                this.setState({\n                  location: \"Not found.\",\n                });\n                return;\n              }\n      */\n    }\n  }, {\n    key: \"buildData\",\n    value: function buildData(rates) {\n      console.log(\"In buildData\");\n      console.log(\"Rates=\", this.rates);\n    }\n    /*\n    getSelect()\n    {\n        // Create a query string by setting the new baseCode and removing new base from comparator\n        console.log(\"In GetSelect\");\n        \n        // Currently displayed currencies;\n        let symbols = [\"BGN\", \"SGD\", \"AUD\", \"EUR\", \"USD\"];\n        let comparator = \"BGN,SGD,AUD,EUR,USD\";\n        \n        \n        // Get the requested base currency\n        //const baseCode = document.getElementById(\"BaseCode\").value;\n        console.log(\"New Base Code:\", this.baseCode);\n        \n        \n        let i = 0;\n        while ((symbols[i++].valueOf() !== this.baseCode) && ( i < symbols.length))  // find the code in symbols\n        {}\n        \n        i--;  // reposition counter to found item\n        if (symbols[i] === this.baseCode)\n        {\n            comparator = symbols.splice(i,1);  // remmove elemment\n        }\n        console.log(\"symbols:\", comparator);\n        \n        let fetchString='https://api.exchangeratesapi.io/2018-11-01?base=' + this.baseCode + \"&symbols=\" + symbols;\n        \n        // Make request\n        fetch(fetchString)\n         .then(response => response.json())\n         .then ( (data) => {\n               console.log(\"Got Data\");\n               console.log(data);\n               this.buildData(data.rates);\n           });\n    }\n    \n    */\n\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/lboylan/Documents/Homework/HW3/graph-bar/src/App.js"],"names":["React","Component","Bar","Graph","App","state","baseCode","rateData","countryCode","rate","height","monetarySymbol","componentDidMount","console","log","getData","onBaseCodeChange","ev","setState","target","value","newData","fetch","then","response","json","data","rates","Object","keys","key","hasOwnProperty","formatValue","parseFloat","toFixed","stateState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nimport Bar from './Components/Bar/Bar.js'\nimport Graph from './Components/Graph/Graph.js'\n\nclass App extends Component {\n/*state ={\n        \"date\" : \"2018-01-01\",\n        \"rates\":{\"USD\":1.0,\"GBP\":10.0},\n        \"baseCode\":\"USD \"        \n}\n*/\n\nstate = {\n  baseCode:\"USD\",\n  rateData:[{\n      countryCode:\"\",\n      rate:\"\",\n      height:\"50%\",\n      monetarySymbol:\"$\",\n  }],\n}\n\n  // Add data during initial page load. Kind of likke constructor\n    componentDidMount = () => {\n    console.log(\"In did Mount and State:\", this.state);\n    this.getData();\n  }\n\n\n  render() \n  {\n    console.log(\"In render. height =\", this.state.height);\n    \n    return (\n    <div className=\"App\">\n      <h1 className=\"Title\"> Currency</h1>\n      <h2 className=\"BaseValue\">Base Currency:</h2>\n      <select basecode={this.baseCode} className=\"BaseCode\" onChange={this.onBaseCodeChange}>\n        <option value=\"USA\">USA</option>\n        <option value=\"AUD\">AUD</option>\n        <option value=\"SGD\">SGD</option>\n        <option value=\"EUR\">EUR</option>\n      </select>\n      <Graph>\n        <Bar \n          style={{height:this.state.height}} \n          title={this.state.countryCode}\n          symbol={this.state.monetarySymbol} \n          />\n      </Graph>\n    </div>\n    );\n  }\n\n  onBaseCodeChange = (ev) => {\n    this.setState({\n      baseCode: ev.target.value,\n    });\n  }\n\ngetData()\n{\n    console.log(\"In GetData\");\n    \n    // The data format from the remote site will be\n    // \"date\": \"YYYY-MM-DD\",\n    // \"rates\": {\"CCC\":dec,\"CCC\":dec,}, \n    // \"base\":  \"3-letter string\"\n    \n    /* Use to test\n    const data =\n    {\n        \"date\" : \"2018-01-01\",\n        \"rates\":{\"USD\":1.0,\"GBP\":10.0},\n        \"base\":\"USD \"        \n    };\n  \n*/\n\n  let newData={};\n\n\n     fetch(\"https://api.exchangeratesapi.io/latest?base=USD&symbols=BGN,GBP,AUD,EUR\")\n     .then(response => response.json())\n     .then ( (data) => {\n           console.log(\"Got Data\");\n           console.log(\"Data=\", data);\n           console.log(\"Rates=\", data.rates);\n\n               \n          for (const key of Object.keys(data.rates))\n          {\n            const value = data.rates[key];\n            console.log(\"in loop to get rates. Value=\", value);\n            console.log(\"in loop to get rates. KEY=\", key);\n                    \n            //Check for properties from prototype chain   \n            if (data.rates.hasOwnProperty(key))\n            {\n              //not a property from prototype chain\n              // format value to be x.xx\n              const formatValue = parseFloat(value).toFixed(2) * 30;\n              // format the HTML style attribute\n              //const height = formatValue + '%';\n       \n\n              // Modify State\n              newData.countryCode=key;\n              newData.rate= formatValue;\n              newData.height= formatValue + '%';\n              newData.monetarySymbol=\"$\";\n              console.log(\"NewData[\", key,\"]=\", newData);\n              this.stateState({rateData:newData});\n          }   \n        }\n       });\n\n/*       \n       /* Not working\n        // 404\n        if (!data.main) {\n          this.setState({\n            location: \"Not found.\",\n          });\n          return;\n        }\n*/\n}\n\n\nbuildData(rates)\n{\n    console.log(\"In buildData\");\n    console.log(\"Rates=\", this.rates);\n    \n}\n\n\n/*\ngetSelect()\n{\n    // Create a query string by setting the new baseCode and removing new base from comparator\n    console.log(\"In GetSelect\");\n    \n    // Currently displayed currencies;\n    let symbols = [\"BGN\", \"SGD\", \"AUD\", \"EUR\", \"USD\"];\n    let comparator = \"BGN,SGD,AUD,EUR,USD\";\n    \n    \n    // Get the requested base currency\n    //const baseCode = document.getElementById(\"BaseCode\").value;\n    console.log(\"New Base Code:\", this.baseCode);\n    \n    \n    let i = 0;\n    while ((symbols[i++].valueOf() !== this.baseCode) && ( i < symbols.length))  // find the code in symbols\n    {}\n    \n    i--;  // reposition counter to found item\n    if (symbols[i] === this.baseCode)\n    {\n        comparator = symbols.splice(i,1);  // remmove elemment\n    }\n    console.log(\"symbols:\", comparator);\n    \n    let fetchString='https://api.exchangeratesapi.io/2018-11-01?base=' + this.baseCode + \"&symbols=\" + symbols;\n    \n    // Make request\n    fetch(fetchString)\n     .then(response => response.json())\n     .then ( (data) => {\n           console.log(\"Got Data\");\n           console.log(data);\n           this.buildData(data.rates);\n       });\n}\n\n*/\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}