{"ast":null,"code":"import _classCallCheck from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lboylan/Documents/Homework/HW3/graph-bar/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Bar from './Components/Bar/Bar.js';\nimport Graph from './Components/Graph/Graph.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      height: \"50%\",\n      baseCode: \"USD\",\n      rate: \"1\",\n      title: \"Country\",\n      monetarySymbol: monetarySymbol // Add data during initial page load. Kind of likke constructor\n\n    };\n\n    _this.componentDidMount = function () {\n      console.log(\"In did Mount and State:\", _this.state);\n\n      _this.getData();\n    };\n\n    _this.onBaseCodeChange = function (ev) {\n      _this.setState({\n        baseCode: ev.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"In render. height =\", this.state.height);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" Currency\"), React.createElement(\"h2\", {\n        className: \"BaseValue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Base Currency:\"), React.createElement(\"select\", {\n        basecode: this.baseCode,\n        className: \"BaseCode\",\n        onChange: this.onBaseCodeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"USA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"USA\"), React.createElement(\"option\", {\n        value: \"AUD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"AUD\"), React.createElement(\"option\", {\n        value: \"SGD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"SGD\"), React.createElement(\"option\", {\n        value: \"EUR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"EUR\")), React.createElement(Graph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        style: {\n          height: this.state.height\n        },\n        title: this.state.title,\n        symbol: this.state.monetarySymbol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      console.log(\"In GetData\");\n      /*\n      fetch(\"https://api.exchangeratesapi.io/latest?base=USD&symbols=BGN,GBP,AUD,EUR\")\n       .then(response => response.json())\n       .then((data) => {\n             console.log(\"Got Data\");\n             console.log(\"Data=\", data);\n             console.log(\"Rates=\", data.rates);\n      */\n      // Modify State\n      // Modify State\n\n      this.setState = {\n        height: \"30%\",\n        title: \"EUR\",\n        monetarySymbol: \"$\"\n      };\n      /*       \n       });\n      });\n      */\n    }\n  }, {\n    key: \"buildData\",\n    value: function buildData(rates) {\n      console.log(\"In buildData\");\n      console.log(\"Rates=\", this.rates);\n\n      var _arr = Object.keys(this.rates);\n\n      for (var _i = 0; _i < _arr.length; _i++) {\n        var key = _arr[_i];\n        console.log(\"in loop to get rates\");\n        var value = this.rates[key]; //Check for properties from prototype chain   \n\n        if (this.rates.hasOwnProperty(key)) {\n          //not a property from prototype chain\n          // format value to be x.xx\n          var formatValue = parseFloat(value).toFixed(2) * 30; // format the HTML style attribute\n\n          var height = formatValue + '%'; // Modify State\n\n          this.setState = {\n            height: height,\n            countryCode: key,\n            monetarySymbol: \"$\"\n          };\n        }\n      }\n    }\n    /*\n    getSelect()\n    {\n        // Create a query string by setting the new baseCode and removing new base from comparator\n        console.log(\"In GetSelect\");\n        \n        // Currently displayed currencies;\n        let symbols = [\"BGN\", \"SGD\", \"AUD\", \"EUR\", \"USD\"];\n        let comparator = \"BGN,SGD,AUD,EUR,USD\";\n        \n        \n        // Get the requested base currency\n        //const baseCode = document.getElementById(\"BaseCode\").value;\n        console.log(\"New Base Code:\", this.baseCode);\n        \n        \n        let i = 0;\n        while ((symbols[i++].valueOf() !== this.baseCode) && ( i < symbols.length))  // find the code in symbols\n        {}\n        \n        i--;  // reposition counter to found item\n        if (symbols[i] === this.baseCode)\n        {\n            comparator = symbols.splice(i,1);  // remmove elemment\n        }\n        console.log(\"symbols:\", comparator);\n        \n        let fetchString='https://api.exchangeratesapi.io/2018-11-01?base=' + this.baseCode + \"&symbols=\" + symbols;\n        \n        // Make request\n        fetch(fetchString)\n         .then(response => response.json())\n         .then ( (data) => {\n               console.log(\"Got Data\");\n               console.log(data);\n               this.buildData(data.rates);\n           });\n    }\n    \n    */\n\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/lboylan/Documents/Homework/HW3/graph-bar/src/App.js"],"names":["React","Component","Bar","Graph","App","state","height","baseCode","rate","title","monetarySymbol","componentDidMount","console","log","getData","onBaseCodeChange","ev","setState","target","value","rates","Object","keys","key","hasOwnProperty","formatValue","parseFloat","toFixed","countryCode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nimport Bar from './Components/Bar/Bar.js'\nimport Graph from './Components/Graph/Graph.js'\n\nclass App extends Component {\n/*state ={\n        \"date\" : \"2018-01-01\",\n        \"rates\":{\"USD\":1.0,\"GBP\":10.0},\n        \"baseCode\":\"USD \"        \n}\n*/\n\nstate = {\n  height: \"50%\",\n  baseCode:\"USD\",\n  rate:\"1\",\n  title:\"Country\",\n  monetarySymbol,\n}\n\n  // Add data during initial page load. Kind of likke constructor\n    componentDidMount = () => {\n    console.log(\"In did Mount and State:\", this.state);\n    this.getData();\n  }\n\n\n  render() \n  {\n    console.log(\"In render. height =\", this.state.height);\n    \n    return (\n    <div className=\"App\">\n      <h1 className=\"Title\"> Currency</h1>\n      <h2 className=\"BaseValue\">Base Currency:</h2>\n      <select basecode={this.baseCode} className=\"BaseCode\" onChange={this.onBaseCodeChange}>\n        <option value=\"USA\">USA</option>\n        <option value=\"AUD\">AUD</option>\n        <option value=\"SGD\">SGD</option>\n        <option value=\"EUR\">EUR</option>\n      </select>\n      <Graph>\n        <Bar \n          style={{height:this.state.height}} \n          title={this.state.title}\n          symbol={this.state.monetarySymbol} \n          />\n      </Graph>\n    </div>\n    );\n  }\n\n  onBaseCodeChange = (ev) => {\n    this.setState({\n      baseCode: ev.target.value,\n    });\n  }\n\ngetData()\n{\n    console.log(\"In GetData\");\n    /*\n    fetch(\"https://api.exchangeratesapi.io/latest?base=USD&symbols=BGN,GBP,AUD,EUR\")\n     .then(response => response.json())\n     .then((data) => {\n           console.log(\"Got Data\");\n           console.log(\"Data=\", data);\n           console.log(\"Rates=\", data.rates);\n */\n           // Modify State\n            // Modify State\n            this.setState = ({\n              height : \"30%\",\n              title:\"EUR\",\n              monetarySymbol:\"$\",\n           });\n       /*       \n        });\n     });\n     */\n}\n\n\nbuildData(rates)\n{\n    console.log(\"In buildData\");\n    console.log(\"Rates=\", this.rates);\n    \n  \n    for (const key of Object.keys(this.rates))\n    {\n        console.log(\"in loop to get rates\");\n        const value = this.rates[key];\n        \n        //Check for properties from prototype chain   \n        if (this.rates.hasOwnProperty(key))\n        {\n            //not a property from prototype chain\n            // format value to be x.xx\n            const formatValue = parseFloat(value).toFixed(2) * 30;\n            // format the HTML style attribute\n            const height = formatValue + '%';\n            \n            // Modify State\n            this.setState = ({\n              height : height,\n              countryCode:key,\n              monetarySymbol:\"$\",\n           });\n        }\n    }\n}\n\n\n/*\ngetSelect()\n{\n    // Create a query string by setting the new baseCode and removing new base from comparator\n    console.log(\"In GetSelect\");\n    \n    // Currently displayed currencies;\n    let symbols = [\"BGN\", \"SGD\", \"AUD\", \"EUR\", \"USD\"];\n    let comparator = \"BGN,SGD,AUD,EUR,USD\";\n    \n    \n    // Get the requested base currency\n    //const baseCode = document.getElementById(\"BaseCode\").value;\n    console.log(\"New Base Code:\", this.baseCode);\n    \n    \n    let i = 0;\n    while ((symbols[i++].valueOf() !== this.baseCode) && ( i < symbols.length))  // find the code in symbols\n    {}\n    \n    i--;  // reposition counter to found item\n    if (symbols[i] === this.baseCode)\n    {\n        comparator = symbols.splice(i,1);  // remmove elemment\n    }\n    console.log(\"symbols:\", comparator);\n    \n    let fetchString='https://api.exchangeratesapi.io/2018-11-01?base=' + this.baseCode + \"&symbols=\" + symbols;\n    \n    // Make request\n    fetch(fetchString)\n     .then(response => response.json())\n     .then ( (data) => {\n           console.log(\"Got Data\");\n           console.log(data);\n           this.buildData(data.rates);\n       });\n}\n\n*/\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}