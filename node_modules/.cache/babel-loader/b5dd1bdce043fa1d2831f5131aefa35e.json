{"ast":null,"code":"import _classCallCheck from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/lboylan/Documents/Homework/HW3/graph-bar/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/lboylan/Documents/Homework/HW3/graph-bar/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Graph from './Components/Graph/Graph.js';\n\nfunction buildBar(rates) {\n  // rates is an arraay of objects\n  // the objects are {countryCode:rate}\n  // we want [countryCode:style]\n  console.log(\"In buildBar\");\n  var bars = Object.entries(rates);\n  bars.forEach(function (entry) {\n    console.log(\"entry=\", entry[1]);\n    var value = entry[1]; // format value to be x.xx\n\n    var formatValue = parseFloat(value).toFixed(2) * 30;\n    var style = '{height:' + formatValue + '%}'; // format the JSX style height attribute          \n\n    entry[1] = style;\n    console.log(\"key-\", entry[1]);\n  });\n  return bars;\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      baseCode: \"USD\",\n      bars: [] // Add data during initial page load. Kind of likke constructor\n\n    };\n\n    _this.componentDidMount = function () {\n      console.log(\"In did Mount and State:\", _this.state);\n\n      _this.getData();\n    };\n\n    _this.onBaseCodeChange = function (ev) {\n      _this.setState({\n        baseCode: ev.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"Apps.render\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" Currency\"), React.createElement(\"h2\", {\n        className: \"BaseValue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Base Currency:\"), React.createElement(\"select\", {\n        basecode: this.baseCode,\n        className: \"BaseCode\",\n        onChange: this.onBaseCodeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"USA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"USA\"), React.createElement(\"option\", {\n        value: \"AUD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"AUD\"), React.createElement(\"option\", {\n        value: \"SGD\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"SGD\"), React.createElement(\"option\", {\n        value: \"EUR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"EUR\")), React.createElement(Graph, {\n        className: \"Graph\",\n        bars: this.state.bars,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      console.log(\"In GetData\");\n      fetch(\"https://api.exchangeratesapi.io/latest?base=USD&symbols=BGN,GBP,AUD,EUR\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(\"Got Data\");\n        console.log(\"Data=\", data);\n        console.log(\"Rates=\", data.rates);\n        var results = buildBar(data.rates);\n\n        _this2.setState({\n          bars: results\n        });\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/lboylan/Documents/Homework/HW3/graph-bar/src/App.js"],"names":["React","Component","Graph","buildBar","rates","console","log","bars","Object","entries","forEach","entry","value","formatValue","parseFloat","toFixed","style","App","state","baseCode","componentDidMount","getData","onBaseCodeChange","ev","setState","target","fetch","then","response","json","data","results"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Graph from './Components/Graph/Graph.js'\n\nfunction buildBar(rates)\n{\n    // rates is an arraay of objects\n    // the objects are {countryCode:rate}\n    // we want [countryCode:style]\n    console.log(\"In buildBar\");\n        \n    const bars = Object.entries(rates);\n    \n    bars.forEach(entry => {\n          console.log(\"entry=\", entry[1]);\n          const value = entry[1];\n          \n         // format value to be x.xx\n         const formatValue = parseFloat(value).toFixed(2) * 30;\n         const style = '{height:' + formatValue + '%}'; // format the JSX style height attribute          \n         entry[1]=style;\n         console.log(\"key-\", entry[1]);\n    });\n    return (bars);\n}\n\n\n\nclass App extends Component \n{\n\n  state = {\n    baseCode:\"USD\",\n    bars:[],\n  }\n\n\n  // Add data during initial page load. Kind of likke constructor\n  componentDidMount = () => {\n    console.log(\"In did Mount and State:\", this.state);\n    this.getData();\n  }\n\n  render() \n  {\n    console.log(\"Apps.render\");\n\n    return (\n      <div>\n        <h1 className=\"Title\"> Currency</h1>\n        <h2 className=\"BaseValue\">Base Currency:</h2>\n        <select \n          basecode={this.baseCode} \n          className=\"BaseCode\" \n          onChange={this.onBaseCodeChange}>\n          <option value=\"USA\">USA</option>\n          <option value=\"AUD\">AUD</option>\n          <option value=\"SGD\">SGD</option>\n          <option value=\"EUR\">EUR</option>\n        </select>\n        <Graph \n              className=\"Graph\"\n               bars={this.state.bars}        \n         />\n      </div>\n    );\n  }\n\n  onBaseCodeChange = (ev) => {\n    this.setState({\n      baseCode: ev.target.value,\n    });\n  }\n\n  getData()\n  { \n    console.log(\"In GetData\");\n  \n\n     fetch(\"https://api.exchangeratesapi.io/latest?base=USD&symbols=BGN,GBP,AUD,EUR\")\n     .then(response => response.json())\n     .then ( (data) => {\n           console.log(\"Got Data\");\n           console.log(\"Data=\", data);\n           console.log(\"Rates=\", data.rates);\n           const results = buildBar(data.rates);\n           this.setState({\n              bars:results\n           });\n       });\n  } \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}